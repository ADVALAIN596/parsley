#summary Introduction to the Parsley Options Menu - How to set up Parsley for the 3D-Scan.

= Introduction =
This wiki page deals with the Parsley options which need to be set up before starting a new 3D scan. The _Parsley Options_ menu can be split up into the settings categories below:
 * _!ScanWorkflow_ contains the settings for the scanning process, such as _!LaserLineAlgorithms_, _!PlaneDetectionAlgorithms_, _ROI_ (region of interest) and _!PointAccumulator_ types.
 * _Camera_ includes parameters for the camera configuration. The intrinsic paramters as well as the frame size (resolution) need to be set.
 * _Laser_ allows to define the color of the provided laser.
 * _!ReferenceBody_ consists of the reference planes which are defined by the saved extrinsic camera parameters for each of the planes (left plane, right plane and ground plane).
 * _Positioner_: Choose the desired positioner type out of *Rotary Positioner* and *Marker Positioner*. Both types are defined by, at least one, reference plane (usually the ground plane). Additionally, the _Rotary Positioner_ requires the current rotational angle, relative to the origin position.

The paragraphs below describe how to set the Parsley Options, especially for the _!ScanWorkflow_ in order to obtain satisfying scanning results.

= How to configure Parsley for the 3D Object Scan =
== Set up the _!ReferenceBody_ and the _Positioner_ ==
After performing the Extrinsic Calibration for the reference planes (see [http://code.google.com/p/parsley/wiki/ExtrinsicCalibration ExtrinsicCalibration]) , the _!ReferenceBody_ as well as the _!Positioner_ can be set up.
For configuring the _!ReferenceBody_, assign the corresponding extrinsic camera parameters to the given properties *!LeftPlane*, *!RightPlane* and *!GroundPlane*.

There are two _Positioner_ types which are supported by Parsley:
 * The _!RotaryPositioner_ requires the assignment of one reference plane (usually extrinsics of ground plane) and if the orientation of the positioner has been changed, the property _Angle_ needs to be changed to update the coordinate transformation correctly.
 * The _!MarkerPositioner_ uses marker pattern which are used to detect the orientation of the positioner. If a pattern with two markers (marker _two_ is arranged on the opposite of marker _one_ on the reference plane) is being used, the extrinsic parameters for both markers are needed as well as the two corresponding pattern files.

== Adjust the _!ScanWorkflow_ settings ==